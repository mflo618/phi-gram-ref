[34m=== Alpha Non-Circular Proof Pack ‚Äî Verbose Run (v1.4.0) ===[0m

[34m=== [1] Interaction-Side Certificate (Œ£_EM(0), Thomson limit) ===[0m
Definition: I = g^2 * K,    K = 1/(60*pi^2)  (Œ±-free by construction)
‚à´_0^1 x^2(1-x)^2 dx  = 0.03333333333333333333362500000
Error vs 1/30        = 2.91666666666666666666666666666666666666666666666666666666667E-22
K_numeric (module)    = 0.0016886863940389628573979910534954606484059795778707820719392792085796930827140844
K_closed_form         = 0.0016886863940389628573979910534954606484059795778707820719392792085796930827140844
relative difference   = 0E-82

[34m=== [2] Geometry-Side Certificate (electron) ===[0m
œÜ                     = 1.61803398874989484820458683436563811772030917980576
(1/2)œÜ^6 (identity)  = 4œÜ + 5/2 = 8.97213595499957939281834733746255247088123671922304
(1/2)œÜ^6 (computed)  = 8.972135954999579392818347337462552470881236719222956223836212724490781869042547
relative difference   = 9.3373711909250082895686144544043119840819887629249151433199984279481121119941383E-51

[34m=== [3] Closure target from Œ±^-1 ===[0m
Using Scale[solved] = 240.70539481162478309779630825775767928366208605333662251785556300071334009024364

Œ±^-1 (input)          = 137.035999084
G_target              = 0.00015485463105144794174993541667354629399741448524737466290236818299837834738348035
Required QC2*(rho/min)= 0.000017259505632564302936039966393882702943292465385222330111742241710369968047908970

[34m=== [4] Round-trip identity check ===[0m
Œ±^-1(G_target)        = 137.03599908400000000000000000000000000000000000000000000000000000000000000000000  [32m‚úÖ[0m
abs error             = 0E-77
rel error             = 0E-68

[34m=== [5] Static scan of compute_K_electron() (AST-based) ===[0m
identifier 'alpha' present  : False
identifier 'g' present      : False
[2m--- function body ---[0m
def compute_K_electron():
    """
    Return K for the electron-only loop at the Thomson limit:
        K = 1 / (60 * pi^2)
    By construction, this K contains no coupling dependence (no alpha, no g).
    """
    return Decimal(1) / (Decimal(60) * (DECIMAL_PI ** 2))

[34m=== [6] Tamper tests (falsifiability) ===[0m
Tamper G by +0.01: Œ±^-1 -> 135.679207013861386138613861386138613861386138613861386138614  (Œî=-1.356792070138613861386138613861386138613861386138613861386)
Tamper G by -0.01: Œ±^-1 -> 138.420201094949494949494949494949494949494949494949494949495  (Œî=1.384202010949494949494949494949494949494949494949494949495)
Tamper G by +0.000001: Œ±^-1 -> 137.035862048137951862048137951862048137951862048137951862048  (Œî=-0.000137035862048137951862048137951862048137951862048137952)

[34m=== [7] Bridge tests (geometry-side density variants) ===[0m
Inputs: œÜ=1.61803398874989484820458683436563811772030917980576, (1/2)œÜ^6=8.9721359549995793928183473374625524708812367192229562238362  Core=2œÜ=3.23606797749978969640917366873127623544061835961152  Scale‚âà240.70539481162478309779630825775767928366208605333662251785556300071334009024364
West (target)  G_target               = 0.000154854631051447941749935416673546293997414485247374662902368
East (orig)    G(Core√óScale, QC2=2œÜ)  = 22616.0596884904470270480403344273795095665911761530606991370   [31m‚ùå[0m
East (invArea) G(1/Scale^2, QC2=1)    = 0.000154854631051447941749935416673546293997414485247374662902368   [32m‚úÖ[0m
East (mass)    G(m-bridge)            = 0.000154854631051447941749935416673546293997414485247374662902368   [32m‚úÖ[0m
rel error (orig vs target)            = 146047033.789528688286019531910929723383323070434548531342059
rel error (invArea vs target)         = 0

[34m=== [8] Electron Density Certificate (QC2=1, rho/min = 1/Scale^2) ===[0m
Using Scale ‚âà 240.70539481162478309779630825775767928366208605333662251785556300071334009024364 (source=solved)
G_cert(scale)         = 0.000154854631051447941749935416673546293997414485247374662902368
Œ±^-1(G_cert)          = 137.035999084000000000000000000000000000000000000000000000000
rel error vs target   = 0E-48

[34m=== [9] Electron Density Certificate v2.0 (QC2=1, rho/min = 1/Scale^2) ===[0m
Using Scale ‚âà 240.70539481162478309779630825775767928366208605333662251785556300071334009024364 (source=solved)
G_cert_v2(scale)      = 0.000154854631051447941749935416673546293997414485247374662902368
Œ±^-1(G_cert_v2)       = 137.035999084000000000000000000000000000000000000000000000000
rel error vs target   = 0E-48

[34m=== [10] Solve for Scale from Œ±^-1 (using v2 certificate) ===[0m
Solved Scale          = 240.705394811624783097796308257757679283662086053336622517856  [32m‚úÖ[0m
[2mTip: re-run with --use-solved-scale (or --scale 240.705394811624783097796308257757679283662086053336622517856) to lock downstream sections.[0m
rel error vs 240.463  = 0.00100803371672474808097839691660537913800495732539568464943047

[2mLegend: ‚úÖ pass, ‚ùå fail. Colors: green=good, yellow=warning, red=issue.[0m
[34m------------------------------------------------------------[0m
Wrote JSON proof log ‚Üí /mnt/data/Alpha_NonCircular_ProofPack_v1_4_0/examples/prooflog_example.json


STDERR:
